{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMRAT ROY\\\\Downloads\\\\new 1\\\\frontend\\\\src\\\\components\\\\DoctorCard.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport './DoctorCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DoctorCard({\n  doctor\n}) {\n  _s();\n  const [imgSrc, setImgSrc] = useState('');\n  useEffect(() => {\n    if (!(doctor !== null && doctor !== void 0 && doctor.image)) {\n      setImgSrc(''); // No image if not present\n      return;\n    }\n\n    // Build URL (handles both absolute http and relative backend paths)\n    const url = doctor.image.startsWith('http') ? doctor.image : `http://localhost:5000${doctor.image.startsWith('/') ? doctor.image : '/uploads/' + doctor.image}`;\n\n    // Preload image to avoid flicker\n    const img = new Image();\n    img.src = url;\n    img.onload = () => setImgSrc(url);\n    img.onerror = () => setImgSrc(''); // Do not show anything if error\n  }, [doctor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-card\",\n    children: [imgSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc,\n      alt: doctor.name || 'Doctor',\n      className: \"doctor-card-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-card-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: doctor.name || 'N/A'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), doctor.specialization && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Specialization:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 38\n        }, this), \" \", doctor.specialization]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 35\n      }, this), doctor.experience !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Experience:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 48\n        }, this), \" \", doctor.experience, \" yrs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 45\n      }, this), doctor.rating !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Rating:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 44\n        }, this), \" \", doctor.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/doctors/${doctor.userId}`,\n        className: \"doctor-card-link\",\n        children: \"View Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorCard, \"PdPZx2HfmVvHGsYan9fmhTfvZ5k=\");\n_c = DoctorCard;\nvar _c;\n$RefreshReg$(_c, \"DoctorCard\");","map":{"version":3,"names":["Link","useState","useEffect","jsxDEV","_jsxDEV","DoctorCard","doctor","_s","imgSrc","setImgSrc","image","url","startsWith","img","Image","src","onload","onerror","className","children","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","specialization","experience","undefined","rating","to","userId","_c","$RefreshReg$"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/components/DoctorCard.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport './DoctorCard.css';\r\n\r\nexport default function DoctorCard({ doctor }) {\r\n  const [imgSrc, setImgSrc] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!doctor?.image) {\r\n      setImgSrc(''); // No image if not present\r\n      return;\r\n    }\r\n\r\n    // Build URL (handles both absolute http and relative backend paths)\r\n    const url =\r\n      doctor.image.startsWith('http')\r\n        ? doctor.image\r\n        : `http://localhost:5000${\r\n            doctor.image.startsWith('/') ? doctor.image : '/uploads/' + doctor.image\r\n          }`;\r\n\r\n    // Preload image to avoid flicker\r\n    const img = new Image();\r\n    img.src = url;\r\n    img.onload = () => setImgSrc(url);\r\n    img.onerror = () => setImgSrc(''); // Do not show anything if error\r\n  }, [doctor]);\r\n\r\n  return (\r\n    <div className=\"doctor-card\">\r\n      {imgSrc && (\r\n        <img\r\n          src={imgSrc}\r\n          alt={doctor.name || 'Doctor'}\r\n          className=\"doctor-card-image\"\r\n        />\r\n      )}\r\n      <div className=\"doctor-card-info\">\r\n        <h2>{doctor.name || 'N/A'}</h2>\r\n        {doctor.specialization && <p><strong>Specialization:</strong> {doctor.specialization}</p>}\r\n        {doctor.experience !== undefined && <p><strong>Experience:</strong> {doctor.experience} yrs</p>}\r\n        {doctor.rating !== undefined && <p><strong>Rating:</strong> {doctor.rating}</p>}\r\n        <Link to={`/doctors/${doctor.userId}`} className=\"doctor-card-link\">\r\n          View Details\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,UAAUA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,IAAI,EAACI,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEI,KAAK,GAAE;MAClBD,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACf;IACF;;IAEA;IACA,MAAME,GAAG,GACPL,MAAM,CAACI,KAAK,CAACE,UAAU,CAAC,MAAM,CAAC,GAC3BN,MAAM,CAACI,KAAK,GACZ,wBACEJ,MAAM,CAACI,KAAK,CAACE,UAAU,CAAC,GAAG,CAAC,GAAGN,MAAM,CAACI,KAAK,GAAG,WAAW,GAAGJ,MAAM,CAACI,KAAK,EACxE;;IAER;IACA,MAAMG,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAGJ,GAAG;IACbE,GAAG,CAACG,MAAM,GAAG,MAAMP,SAAS,CAACE,GAAG,CAAC;IACjCE,GAAG,CAACI,OAAO,GAAG,MAAMR,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAKc,SAAS,EAAC,aAAa;IAAAC,QAAA,GACzBX,MAAM,iBACLJ,OAAA;MACEW,GAAG,EAAEP,MAAO;MACZY,GAAG,EAAEd,MAAM,CAACe,IAAI,IAAI,QAAS;MAC7BH,SAAS,EAAC;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACF,eACDrB,OAAA;MAAKc,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/Bf,OAAA;QAAAe,QAAA,EAAKb,MAAM,CAACe,IAAI,IAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC9BnB,MAAM,CAACoB,cAAc,iBAAItB,OAAA;QAAAe,QAAA,gBAAGf,OAAA;UAAAe,QAAA,EAAQ;QAAe;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACnB,MAAM,CAACoB,cAAc;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxFnB,MAAM,CAACqB,UAAU,KAAKC,SAAS,iBAAIxB,OAAA;QAAAe,QAAA,gBAAGf,OAAA;UAAAe,QAAA,EAAQ;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACnB,MAAM,CAACqB,UAAU,EAAC,MAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC9FnB,MAAM,CAACuB,MAAM,KAAKD,SAAS,iBAAIxB,OAAA;QAAAe,QAAA,gBAAGf,OAAA;UAAAe,QAAA,EAAQ;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACnB,MAAM,CAACuB,MAAM;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/ErB,OAAA,CAACJ,IAAI;QAAC8B,EAAE,EAAE,YAAYxB,MAAM,CAACyB,MAAM,EAAG;QAACb,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAEpE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CA5CuBF,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}