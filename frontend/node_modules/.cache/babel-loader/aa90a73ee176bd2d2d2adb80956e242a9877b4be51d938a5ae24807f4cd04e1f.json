{"ast":null,"code":"// Add inside AuthProvider\n\n// Send OTP for forgot password\nconst sendForgotPassword = async email => {\n  try {\n    const res = await axios.post(\"http://localhost:5000/api/auth/forgot-password\", {\n      email\n    });\n    // backend should return { message: 'OTP sent successfully' }\n    return res.data.message;\n  } catch (err) {\n    var _err$response, _err$response2;\n    console.error(\"Send OTP error:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n    throw ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || {\n      message: 'Failed to send OTP'\n    };\n  }\n};\n\n// Reset password using OTP\nconst resetPassword = async (email, otp, newPassword) => {\n  try {\n    const res = await axios.post(\"http://localhost:5000/api/auth/reset-password\", {\n      email,\n      otp,\n      newPassword\n    });\n    return res.data.message; // e.g., \"Password reset successful\"\n  } catch (err) {\n    var _err$response3, _err$response4;\n    console.error(\"Reset password error:\", ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err.message);\n    throw ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data) || {\n      message: 'Failed to reset password'\n    };\n  }\n};","map":{"version":3,"names":["sendForgotPassword","email","res","axios","post","data","message","err","_err$response","_err$response2","console","error","response","resetPassword","otp","newPassword","_err$response3","_err$response4"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["// Add inside AuthProvider\r\n\r\n// Send OTP for forgot password\r\nconst sendForgotPassword = async (email) => {\r\n  try {\r\n    const res = await axios.post(\"http://localhost:5000/api/auth/forgot-password\", { email });\r\n    // backend should return { message: 'OTP sent successfully' }\r\n    return res.data.message;\r\n  } catch (err) {\r\n    console.error(\"Send OTP error:\", err.response?.data || err.message);\r\n    throw err.response?.data || { message: 'Failed to send OTP' };\r\n  }\r\n};\r\n\r\n// Reset password using OTP\r\nconst resetPassword = async (email, otp, newPassword) => {\r\n  try {\r\n    const res = await axios.post(\"http://localhost:5000/api/auth/reset-password\", { email, otp, newPassword });\r\n    return res.data.message; // e.g., \"Password reset successful\"\r\n  } catch (err) {\r\n    console.error(\"Reset password error:\", err.response?.data || err.message);\r\n    throw err.response?.data || { message: 'Failed to reset password' };\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,MAAMA,kBAAkB,GAAG,MAAOC,KAAK,IAAK;EAC1C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,gDAAgD,EAAE;MAAEH;IAAM,CAAC,CAAC;IACzF;IACA,OAAOC,GAAG,CAACG,IAAI,CAACC,OAAO;EACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAC,aAAA,EAAAC,cAAA;IACZC,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAE,EAAAH,aAAA,GAAAD,GAAG,CAACK,QAAQ,cAAAJ,aAAA,uBAAZA,aAAA,CAAcH,IAAI,KAAIE,GAAG,CAACD,OAAO,CAAC;IACnE,MAAM,EAAAG,cAAA,GAAAF,GAAG,CAACK,QAAQ,cAAAH,cAAA,uBAAZA,cAAA,CAAcJ,IAAI,KAAI;MAAEC,OAAO,EAAE;IAAqB,CAAC;EAC/D;AACF,CAAC;;AAED;AACA,MAAMO,aAAa,GAAG,MAAAA,CAAOZ,KAAK,EAAEa,GAAG,EAAEC,WAAW,KAAK;EACvD,IAAI;IACF,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,+CAA+C,EAAE;MAAEH,KAAK;MAAEa,GAAG;MAAEC;IAAY,CAAC,CAAC;IAC1G,OAAOb,GAAG,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC;EAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAS,cAAA,EAAAC,cAAA;IACZP,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAE,EAAAK,cAAA,GAAAT,GAAG,CAACK,QAAQ,cAAAI,cAAA,uBAAZA,cAAA,CAAcX,IAAI,KAAIE,GAAG,CAACD,OAAO,CAAC;IACzE,MAAM,EAAAW,cAAA,GAAAV,GAAG,CAACK,QAAQ,cAAAK,cAAA,uBAAZA,cAAA,CAAcZ,IAAI,KAAI;MAAEC,OAAO,EAAE;IAA2B,CAAC;EACrE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}