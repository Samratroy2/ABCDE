{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMRAT ROY\\\\Downloads\\\\new 1\\\\frontend\\\\src\\\\pages\\\\BookAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useParams } from 'react-router-dom'; // get doctorId from route\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookAppointment() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    doctorId\n  } = useParams(); // doctorId from URL\n  const [doctor, setDoctor] = useState(null);\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  useEffect(() => {\n    fetchDoctor();\n  }, [doctorId]);\n  const fetchDoctor = async () => {\n    try {\n      const res = await axios.get(`/api/doctors/${doctorId}`);\n      if (res.data.userId === user.userId) {\n        alert(\"You cannot book an appointment with yourself.\");\n        return;\n      }\n      setDoctor(res.data);\n    } catch (err) {\n      console.error(err);\n      alert(\"Doctor not found\");\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!doctor || !date || !time) return alert('Fill all fields');\n    try {\n      await axios.post('/api/appointments', {\n        patientId: user.userId,\n        patientName: user.name,\n        patientEmail: user.email,\n        doctorId: doctor.userId,\n        doctorName: doctor.name,\n        doctorEmail: doctor.email,\n        date,\n        time,\n        status: 'pending'\n      });\n      alert('Appointment requested');\n      setDate('');\n      setTime('');\n    } catch (err) {\n      console.error(err);\n      alert('Booking failed');\n    }\n  };\n  if (!doctor) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading doctor info...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Book Appointment with \", doctor.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Doctor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }, this), \" \", doctor.name, \" (\", doctor.email, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: time,\n        onChange: e => setTime(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(BookAppointment, \"CHrmgCtrHQWqwQ77f/T+2+UGUDQ=\", false, function () {\n  return [useAuth, useParams];\n});\n_c = BookAppointment;\nvar _c;\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","useParams","jsxDEV","_jsxDEV","BookAppointment","_s","user","doctorId","doctor","setDoctor","date","setDate","time","setTime","fetchDoctor","res","get","data","userId","alert","err","console","error","handleSubmit","e","preventDefault","post","patientId","patientName","name","patientEmail","email","doctorName","doctorEmail","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/pages/BookAppointment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useParams } from 'react-router-dom'; // get doctorId from route\r\n\r\nexport default function BookAppointment() {\r\n  const { user } = useAuth();\r\n  const { doctorId } = useParams(); // doctorId from URL\r\n  const [doctor, setDoctor] = useState(null);\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchDoctor();\r\n  }, [doctorId]);\r\n\r\n  const fetchDoctor = async () => {\r\n    try {\r\n      const res = await axios.get(`/api/doctors/${doctorId}`);\r\n      if (res.data.userId === user.userId) {\r\n        alert(\"You cannot book an appointment with yourself.\");\r\n        return;\r\n      }\r\n      setDoctor(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Doctor not found\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!doctor || !date || !time) return alert('Fill all fields');\r\n\r\n    try {\r\n      await axios.post('/api/appointments', {\r\n        patientId: user.userId,\r\n        patientName: user.name,\r\n        patientEmail: user.email,\r\n        doctorId: doctor.userId,\r\n        doctorName: doctor.name,\r\n        doctorEmail: doctor.email,\r\n        date,\r\n        time,\r\n        status: 'pending'\r\n      });\r\n      alert('Appointment requested');\r\n      setDate('');\r\n      setTime('');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Booking failed');\r\n    }\r\n  };\r\n\r\n  if (!doctor) return <p>Loading doctor info...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Book Appointment with {doctor.name}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <p><strong>Doctor:</strong> {doctor.name} ({doctor.email})</p>\r\n        <input type=\"date\" value={date} onChange={e => setDate(e.target.value)} required />\r\n        <input type=\"time\" value={time} onChange={e => setTime(e.target.value)} required />\r\n        <br />\r\n        <button type=\"submit\">Request Appointment</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}