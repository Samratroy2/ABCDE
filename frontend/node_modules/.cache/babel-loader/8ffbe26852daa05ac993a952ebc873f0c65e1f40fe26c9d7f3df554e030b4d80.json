{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMRAT ROY\\\\Downloads\\\\new 1\\\\frontend\\\\src\\\\pages\\\\Doctors.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/Doctors.jsx\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./DoctorCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Doctors() {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchDoctors = async () => {\n      try {\n        const res = await axios.get(\"/api/users?role=doctor\"); // Adjust API if needed\n        setDoctors(res.data || []);\n      } catch (err) {\n        console.error(\"Error fetching doctors:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDoctors();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading doctors...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  if (!doctors.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-doctors\",\n      children: \"No doctors found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-grid\",\n    children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-card\",\n      children: [doctor.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/uploads/${doctor.image}`,\n        alt: doctor.name,\n        className: \"doctor-image\",\n        onError: e => e.target.style.display = \"none\" // hide broken images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"doctor-name\",\n        children: doctor.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"doctor-specialization\",\n        children: doctor.specialization || \"N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"doctor-location\",\n        children: doctor.location || \"Location not specified\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"doctor-rating\",\n        children: [\"Rating: \", doctor.rating || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, doctor.userId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Doctors, \"M+QStYsO4Kau999EtXnV4dyODkw=\");\n_c = Doctors;\nvar _c;\n$RefreshReg$(_c, \"Doctors\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Doctors","_s","doctors","setDoctors","loading","setLoading","fetchDoctors","res","get","data","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","doctor","image","src","alt","name","onError","e","target","style","display","specialization","location","rating","userId","_c","$RefreshReg$"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/pages/Doctors.jsx"],"sourcesContent":["// frontend/src/pages/Doctors.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./DoctorCard.css\";\r\n\r\nexport default function Doctors() {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDoctors = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/users?role=doctor\"); // Adjust API if needed\r\n        setDoctors(res.data || []);\r\n      } catch (err) {\r\n        console.error(\"Error fetching doctors:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading doctors...</div>;\r\n  }\r\n\r\n  if (!doctors.length) {\r\n    return <div className=\"no-doctors\">No doctors found</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"doctor-grid\">\r\n      {doctors.map((doctor) => (\r\n        <div key={doctor.userId} className=\"doctor-card\">\r\n          {/* Show image only if available */}\r\n          {doctor.image && (\r\n            <img\r\n              src={`/uploads/${doctor.image}`}\r\n              alt={doctor.name}\r\n              className=\"doctor-image\"\r\n              onError={(e) => (e.target.style.display = \"none\")} // hide broken images\r\n            />\r\n          )}\r\n          <h3 className=\"doctor-name\">{doctor.name}</h3>\r\n          <p className=\"doctor-specialization\">{doctor.specialization || \"N/A\"}</p>\r\n          <p className=\"doctor-location\">{doctor.location || \"Location not specified\"}</p>\r\n          <p className=\"doctor-rating\">Rating: {doctor.rating || 0}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}