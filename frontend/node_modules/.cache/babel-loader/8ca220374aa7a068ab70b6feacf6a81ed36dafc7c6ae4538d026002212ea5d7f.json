{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMRAT ROY\\\\Downloads\\\\new 1\\\\frontend\\\\src\\\\components\\\\DoctorCard.jsx\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport './DoctorCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DoctorCard({\n  doctor,\n  currentUser\n}) {\n  _s();\n  const defaultImage = 'http://localhost:5000/uploads/default-doctor.png';\n  const [imgSrc, setImgSrc] = useState(defaultImage);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!(doctor !== null && doctor !== void 0 && doctor.image)) return;\n    const url = doctor.image.startsWith('http') ? doctor.image : `http://localhost:5000${doctor.image.startsWith('/') ? doctor.image : '/' + doctor.image}`;\n    const img = new Image();\n    img.src = url;\n    img.onload = () => setImgSrc(url);\n    img.onerror = () => setImgSrc(defaultImage);\n  }, [doctor]);\n  const handleBookAppointment = () => {\n    navigate(`/book-appointment/${doctor.userId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc,\n      alt: doctor.name || 'Doctor',\n      className: \"doctor-card-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-card-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: doctor.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), doctor.specialization && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Specialization: \", doctor.specialization]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 35\n      }, this), doctor.experience !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Experience: \", doctor.experience, \" yrs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 45\n      }, this), doctor.rating !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", doctor.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/doctors/${doctor.userId}`,\n        children: \"View Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) === 'patient' && currentUser.userId !== doctor.userId && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBookAppointment,\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorCard, \"VAGVJLlVWJ8JEAtWs1Oxardg9Bw=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorCard;\nvar _c;\n$RefreshReg$(_c, \"DoctorCard\");","map":{"version":3,"names":["Link","useNavigate","useState","useEffect","jsxDEV","_jsxDEV","DoctorCard","doctor","currentUser","_s","defaultImage","imgSrc","setImgSrc","navigate","image","url","startsWith","img","Image","src","onload","onerror","handleBookAppointment","userId","className","children","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","specialization","experience","undefined","rating","to","role","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/components/DoctorCard.jsx"],"sourcesContent":["import { Link, useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport './DoctorCard.css';\r\n\r\nexport default function DoctorCard({ doctor, currentUser }) {\r\n  const defaultImage = 'http://localhost:5000/uploads/default-doctor.png';\r\n  const [imgSrc, setImgSrc] = useState(defaultImage);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!doctor?.image) return;\r\n    const url = doctor.image.startsWith('http')\r\n      ? doctor.image\r\n      : `http://localhost:5000${doctor.image.startsWith('/') ? doctor.image : '/' + doctor.image}`;\r\n    const img = new Image();\r\n    img.src = url;\r\n    img.onload = () => setImgSrc(url);\r\n    img.onerror = () => setImgSrc(defaultImage);\r\n  }, [doctor]);\r\n\r\n  const handleBookAppointment = () => {\r\n    navigate(`/book-appointment/${doctor.userId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"doctor-card\">\r\n      <img src={imgSrc} alt={doctor.name || 'Doctor'} className=\"doctor-card-image\" />\r\n      <div className=\"doctor-card-info\">\r\n        <h2>{doctor.name}</h2>\r\n        {doctor.specialization && <p>Specialization: {doctor.specialization}</p>}\r\n        {doctor.experience !== undefined && <p>Experience: {doctor.experience} yrs</p>}\r\n        {doctor.rating !== undefined && <p>Rating: {doctor.rating}</p>}\r\n        <Link to={`/doctors/${doctor.userId}`}>View Details</Link>\r\n        {currentUser?.role === 'patient' && currentUser.userId !== doctor.userId && (\r\n          <button onClick={handleBookAppointment}>Book Appointment</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}