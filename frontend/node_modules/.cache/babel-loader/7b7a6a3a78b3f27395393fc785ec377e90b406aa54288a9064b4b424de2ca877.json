{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMRAT ROY\\\\Downloads\\\\new 1\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/contexts/AuthContext.jsx\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Load user from localStorage on mount\n  useEffect(() => {\n    const saved = localStorage.getItem('user');\n    if (saved) setUser(JSON.parse(saved));\n  }, []);\n\n  // ---------------- LOGIN ----------------\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password\n      });\n      setUser(res.data.user);\n      localStorage.setItem('user', JSON.stringify(res.data.user));\n      setLoading(false);\n      return res.data.user;\n    } catch (err) {\n      setLoading(false);\n      throw err;\n    }\n  };\n\n  // ---------------- LOGOUT ----------------\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // ---------------- SIGNUP ----------------\n  const signup = async (name, email, password) => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/signup', {\n        name,\n        email,\n        password\n      });\n      setLoading(false);\n      return res.data;\n    } catch (err) {\n      setLoading(false);\n      throw err;\n    }\n  };\n\n  // ---------------- UPDATE USER ----------------\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  };\n\n  // ---------------- FORGOT PASSWORD ----------------\n  const sendForgotPassword = async email => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/forgot-password', {\n        email\n      });\n      setLoading(false);\n      return res.data.message;\n    } catch (err) {\n      setLoading(false);\n      throw err;\n    }\n  };\n\n  // ---------------- RESET PASSWORD ----------------\n  const resetPassword = async (email, otp, newPassword) => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/reset-password', {\n        email,\n        otp: Number(otp),\n        // ensure OTP is sent as a number\n        newPassword\n      });\n      setLoading(false);\n      return res.data.message;\n    } catch (err) {\n      setLoading(false);\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      signup,\n      updateUser,\n      sendForgotPassword,\n      resetPassword,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for easy usage\n_s(AuthProvider, \"Vot/f62t7wRmBOt67JIN3/+eVxk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","saved","localStorage","getItem","JSON","parse","login","email","password","res","post","data","setItem","stringify","err","logout","removeItem","signup","name","updateUser","updatedUser","sendForgotPassword","message","resetPassword","otp","newPassword","Number","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["// frontend/src/contexts/AuthContext.jsx\r\nimport { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Load user from localStorage on mount\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem('user');\r\n    if (saved) setUser(JSON.parse(saved));\r\n  }, []);\r\n\r\n  // ---------------- LOGIN ----------------\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/auth/login', { email, password });\r\n      setUser(res.data.user);\r\n      localStorage.setItem('user', JSON.stringify(res.data.user));\r\n      setLoading(false);\r\n      return res.data.user;\r\n    } catch (err) {\r\n      setLoading(false);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // ---------------- LOGOUT ----------------\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  // ---------------- SIGNUP ----------------\r\n  const signup = async (name, email, password) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/auth/signup', { name, email, password });\r\n      setLoading(false);\r\n      return res.data;\r\n    } catch (err) {\r\n      setLoading(false);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // ---------------- UPDATE USER ----------------\r\n  const updateUser = (updatedUser) => {\r\n    setUser(updatedUser);\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n  };\r\n\r\n  // ---------------- FORGOT PASSWORD ----------------\r\n  const sendForgotPassword = async (email) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/auth/forgot-password', { email });\r\n      setLoading(false);\r\n      return res.data.message;\r\n    } catch (err) {\r\n      setLoading(false);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // ---------------- RESET PASSWORD ----------------\r\n  const resetPassword = async (email, otp, newPassword) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/auth/reset-password', {\r\n        email,\r\n        otp: Number(otp), // ensure OTP is sent as a number\r\n        newPassword\r\n      });\r\n      setLoading(false);\r\n      return res.data.message;\r\n    } catch (err) {\r\n      setLoading(false);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        login,\r\n        logout,\r\n        signup,\r\n        updateUser,\r\n        sendForgotPassword,\r\n        resetPassword,\r\n        loading\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for easy usage\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}