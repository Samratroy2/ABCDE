{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMRAT ROY\\\\Downloads\\\\new 1\\\\frontend\\\\src\\\\pages\\\\Pharmacists.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/Pharmacists.jsx\nimport React, { useEffect, useState } from 'react';\nimport PharmacistCard from '../components/PharmacistCard';\nimport './Pharmacists.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pharmacists() {\n  _s();\n  const [pharmacists, setPharmacists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchPharmacists = async () => {\n      try {\n        // Fetch from backend JSON or API endpoint\n        const res = await fetch('http://localhost:5000/data/dummyPharmacistData.json');\n        const data = await res.json();\n        setPharmacists(data);\n      } catch (err) {\n        console.error('Error fetching pharmacists:', err);\n        setError('Failed to load pharmacists.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPharmacists();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading pharmacists...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pharmacists-container\",\n    children: pharmacists.map(pharmacist => /*#__PURE__*/_jsxDEV(PharmacistCard, {\n      userId: pharmacist.userId\n    }, pharmacist.userId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Pharmacists, \"kTtQ2hZZUVbR3it3bSwwPVT1ZXw=\");\n_c = Pharmacists;\nvar _c;\n$RefreshReg$(_c, \"Pharmacists\");","map":{"version":3,"names":["React","useEffect","useState","PharmacistCard","jsxDEV","_jsxDEV","Pharmacists","_s","pharmacists","setPharmacists","loading","setLoading","error","setError","fetchPharmacists","res","fetch","data","json","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","pharmacist","userId","_c","$RefreshReg$"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/pages/Pharmacists.jsx"],"sourcesContent":["// frontend/src/pages/Pharmacists.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport PharmacistCard from '../components/PharmacistCard';\r\nimport './Pharmacists.css';\r\n\r\nexport default function Pharmacists() {\r\n  const [pharmacists, setPharmacists] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchPharmacists = async () => {\r\n      try {\r\n        // Fetch from backend JSON or API endpoint\r\n        const res = await fetch('http://localhost:5000/data/dummyPharmacistData.json');\r\n        const data = await res.json();\r\n        setPharmacists(data);\r\n      } catch (err) {\r\n        console.error('Error fetching pharmacists:', err);\r\n        setError('Failed to load pharmacists.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPharmacists();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading pharmacists...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"pharmacists-container\">\r\n      {pharmacists.map((pharmacist) => (\r\n        <PharmacistCard key={pharmacist.userId} userId={pharmacist.userId} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qDAAqD,CAAC;QAC9E,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7BT,cAAc,CAACQ,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACR,KAAK,CAAC,6BAA6B,EAAEO,GAAG,CAAC;QACjDN,QAAQ,CAAC,6BAA6B,CAAC;MACzC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDG,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAgB,QAAA,EAAG;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACjD,IAAIb,KAAK,EAAE,oBAAOP,OAAA;IAAAgB,QAAA,EAAIT;EAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhC,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,uBAAuB;IAAAL,QAAA,EACnCb,WAAW,CAACmB,GAAG,CAAEC,UAAU,iBAC1BvB,OAAA,CAACF,cAAc;MAAyB0B,MAAM,EAAED,UAAU,CAACC;IAAO,GAA7CD,UAAU,CAACC,MAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA8B,CACrE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CAhCuBD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}