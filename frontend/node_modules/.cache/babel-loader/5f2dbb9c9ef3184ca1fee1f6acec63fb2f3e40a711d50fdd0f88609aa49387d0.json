{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMRAT ROY\\\\Downloads\\\\new 1\\\\frontend\\\\src\\\\pages\\\\MedicineSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport PharmacistCard from \"../components/PharmacistCard\";\nimport \"./MedicineSearch.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MedicineSearch() {\n  _s();\n  const [queryParams] = useSearchParams();\n  const [query, setQuery] = useState(queryParams.get(\"name\") || \"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleSearch = async e => {\n    if (e) e.preventDefault();\n    if (!query.trim()) {\n      setError(\"Please enter a medicine name.\");\n      return;\n    }\n    setError(\"\");\n    setLoading(true);\n    try {\n      const res = await axios.get(`http://localhost:5000/api/pharmacists/search/medicine?name=${encodeURIComponent(query)}`);\n      setResults(res.data);\n    } catch (err) {\n      console.error(\"Error searching medicine:\", err);\n      setError(\"Failed to fetch results.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Run search when query param exists\n  useEffect(() => {\n    if (query) handleSearch();\n    // eslint-disable-next-line\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"medicine-search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD0D Search Medicine Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Enter medicine name (e.g., Paracetamol)\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Searching...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pharmacist-results\",\n      children: results.length > 0 ? results.map(pharmacist => /*#__PURE__*/_jsxDEV(PharmacistCard, {\n        pharmacist: pharmacist,\n        highlight: query // ‚úÖ pass query to highlight medicine\n      }, pharmacist.userId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)) : !loading && query && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No pharmacists found stocking \\\"\", query, \"\\\".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(MedicineSearch, \"kwiB6nCg61qmQCpc3kE6u+Cojkw=\", false, function () {\n  return [useSearchParams];\n});\n_c = MedicineSearch;\nvar _c;\n$RefreshReg$(_c, \"MedicineSearch\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","axios","PharmacistCard","jsxDEV","_jsxDEV","MedicineSearch","_s","queryParams","query","setQuery","get","results","setResults","loading","setLoading","error","setError","handleSearch","e","preventDefault","trim","res","encodeURIComponent","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","length","map","pharmacist","highlight","userId","_c","$RefreshReg$"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/pages/MedicineSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport PharmacistCard from \"../components/PharmacistCard\";\r\nimport \"./MedicineSearch.css\";\r\n\r\nexport default function MedicineSearch() {\r\n  const [queryParams] = useSearchParams();\r\n  const [query, setQuery] = useState(queryParams.get(\"name\") || \"\");\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSearch = async (e) => {\r\n    if (e) e.preventDefault();\r\n    if (!query.trim()) {\r\n      setError(\"Please enter a medicine name.\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `http://localhost:5000/api/pharmacists/search/medicine?name=${encodeURIComponent(\r\n          query\r\n        )}`\r\n      );\r\n      setResults(res.data);\r\n    } catch (err) {\r\n      console.error(\"Error searching medicine:\", err);\r\n      setError(\"Failed to fetch results.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Run search when query param exists\r\n  useEffect(() => {\r\n    if (query) handleSearch();\r\n    // eslint-disable-next-line\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"medicine-search-container\">\r\n      <h2>üîç Search Medicine Availability</h2>\r\n\r\n      <form onSubmit={handleSearch} className=\"search-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          placeholder=\"Enter medicine name (e.g., Paracetamol)\"\r\n          className=\"search-input\"\r\n        />\r\n        <button type=\"submit\" className=\"search-btn\">\r\n          Search\r\n        </button>\r\n      </form>\r\n\r\n      {loading && <p>Searching...</p>}\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      <div className=\"pharmacist-results\">\r\n        {results.length > 0 ? (\r\n          results.map((pharmacist) => (\r\n            <PharmacistCard\r\n              key={pharmacist.userId}\r\n              pharmacist={pharmacist}\r\n              highlight={query} // ‚úÖ pass query to highlight medicine\r\n            />\r\n          ))\r\n        ) : (\r\n          !loading &&\r\n          query && <p>No pharmacists found stocking \"{query}\".</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,WAAW,CAAC,GAAGP,eAAe,CAAC,CAAC;EACvC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACS,WAAW,CAACG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMmB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChC,IAAIA,CAAC,EAAEA,CAAC,CAACC,cAAc,CAAC,CAAC;IACzB,IAAI,CAACX,KAAK,CAACY,IAAI,CAAC,CAAC,EAAE;MACjBJ,QAAQ,CAAC,+BAA+B,CAAC;MACzC;IACF;IAEAA,QAAQ,CAAC,EAAE,CAAC;IACZF,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMO,GAAG,GAAG,MAAMpB,KAAK,CAACS,GAAG,CACzB,8DAA8DY,kBAAkB,CAC9Ed,KACF,CAAC,EACH,CAAC;MACDI,UAAU,CAACS,GAAG,CAACE,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACV,KAAK,CAAC,2BAA2B,EAAES,GAAG,CAAC;MAC/CR,QAAQ,CAAC,0BAA0B,CAAC;IACtC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,EAAES,YAAY,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,oBACEJ,OAAA;IAAKsB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxCvB,OAAA;MAAAuB,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExC3B,OAAA;MAAM4B,QAAQ,EAAEf,YAAa;MAACS,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACnDvB,OAAA;QACE6B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE1B,KAAM;QACb2B,QAAQ,EAAGjB,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,yCAAyC;QACrDX,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACF3B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAE7C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAENlB,OAAO,iBAAIT,OAAA;MAAAuB,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC9BhB,KAAK,iBAAIX,OAAA;MAAGsB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1C3B,OAAA;MAAKsB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAChChB,OAAO,CAAC2B,MAAM,GAAG,CAAC,GACjB3B,OAAO,CAAC4B,GAAG,CAAEC,UAAU,iBACrBpC,OAAA,CAACF,cAAc;QAEbsC,UAAU,EAAEA,UAAW;QACvBC,SAAS,EAAEjC,KAAM,CAAC;MAAA,GAFbgC,UAAU,CAACE,MAAM;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGvB,CACF,CAAC,GAEF,CAAClB,OAAO,IACRL,KAAK,iBAAIJ,OAAA;QAAAuB,QAAA,GAAG,kCAA+B,EAACnB,KAAK,EAAC,KAAE;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACxD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzB,EAAA,CA1EuBD,cAAc;EAAA,QACdL,eAAe;AAAA;AAAA2C,EAAA,GADftC,cAAc;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}