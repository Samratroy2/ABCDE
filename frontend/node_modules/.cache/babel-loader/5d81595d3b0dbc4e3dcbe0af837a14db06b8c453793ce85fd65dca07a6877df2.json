{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMRAT ROY\\\\Downloads\\\\new 1\\\\frontend\\\\src\\\\pages\\\\MedicineSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport PharmacistCard from \"../components/PharmacistCard\";\nimport \"./MedicineSearch.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MedicineSearch() {\n  _s();\n  const [queryParams] = useSearchParams();\n  const [query, setQuery] = useState(queryParams.get(\"name\") || \"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n\n  // Example quick search options\n  const quickOptions = [\"Paracetamol\", \"Ibuprofen\", \"Amoxicillin\", \"Cetirizine\", \"Azithromycin\", \"Metformin\", \"Atorvastatin\", \"Amlodipine\"];\n  const handleSearch = async e => {\n    if (e) e.preventDefault();\n    if (!query.trim()) {\n      setError(\"Please enter a medicine name.\");\n      return;\n    }\n    setError(\"\");\n    setLoading(true);\n    try {\n      const res = await axios.get(`http://localhost:5000/api/pharmacists/search/medicine?name=${encodeURIComponent(query)}`);\n      setResults(res.data);\n    } catch (err) {\n      console.error(\"Error searching medicine:\", err);\n      setError(\"Failed to fetch results.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Run search when query param exists\n  useEffect(() => {\n    if (query) handleSearch();\n    // eslint-disable-next-line\n  }, [query]);\n\n  // ‚úÖ Handle quick option click\n  const handleQuickSearch = medicine => {\n    setQuery(medicine);\n    setSuggestions([]); // hide suggestions\n    setTimeout(() => handleSearch(), 0);\n  };\n\n  // ‚úÖ Filter quick options while typing\n  useEffect(() => {\n    if (!query.trim()) {\n      setSuggestions([]);\n      return;\n    }\n    const filtered = quickOptions.filter(opt => opt.toLowerCase().includes(query.toLowerCase()));\n    setSuggestions(filtered);\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"medicine-search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD0D Search Medicine Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Enter medicine name (e.g., Paracetamol)\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"suggestions-list\",\n      children: suggestions.map(med => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleQuickSearch(med),\n        children: med\n      }, med, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Searching...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pharmacist-results\",\n      children: results.length > 0 ? results.map(pharmacist => /*#__PURE__*/_jsxDEV(PharmacistCard, {\n        pharmacist: pharmacist,\n        highlight: query\n      }, pharmacist.userId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)) : !loading && query && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No pharmacists found stocking \\\"\", query, \"\\\".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(MedicineSearch, \"DwGtJH5R8AHNfT5KjR+CzQ2Cvmg=\", false, function () {\n  return [useSearchParams];\n});\n_c = MedicineSearch;\nvar _c;\n$RefreshReg$(_c, \"MedicineSearch\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","axios","PharmacistCard","jsxDEV","_jsxDEV","MedicineSearch","_s","queryParams","query","setQuery","get","results","setResults","loading","setLoading","error","setError","suggestions","setSuggestions","quickOptions","handleSearch","e","preventDefault","trim","res","encodeURIComponent","data","err","console","handleQuickSearch","medicine","setTimeout","filtered","filter","opt","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","length","map","med","onClick","pharmacist","highlight","userId","_c","$RefreshReg$"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/pages/MedicineSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport PharmacistCard from \"../components/PharmacistCard\";\r\nimport \"./MedicineSearch.css\";\r\n\r\nexport default function MedicineSearch() {\r\n  const [queryParams] = useSearchParams();\r\n  const [query, setQuery] = useState(queryParams.get(\"name\") || \"\");\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  // Example quick search options\r\n  const quickOptions = [\r\n    \"Paracetamol\",\r\n    \"Ibuprofen\",\r\n    \"Amoxicillin\",\r\n    \"Cetirizine\",\r\n    \"Azithromycin\",\r\n    \"Metformin\",\r\n    \"Atorvastatin\",\r\n    \"Amlodipine\",\r\n  ];\r\n\r\n  const handleSearch = async (e) => {\r\n    if (e) e.preventDefault();\r\n    if (!query.trim()) {\r\n      setError(\"Please enter a medicine name.\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `http://localhost:5000/api/pharmacists/search/medicine?name=${encodeURIComponent(\r\n          query\r\n        )}`\r\n      );\r\n      setResults(res.data);\r\n    } catch (err) {\r\n      console.error(\"Error searching medicine:\", err);\r\n      setError(\"Failed to fetch results.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Run search when query param exists\r\n  useEffect(() => {\r\n    if (query) handleSearch();\r\n    // eslint-disable-next-line\r\n  }, [query]);\r\n\r\n  // ‚úÖ Handle quick option click\r\n  const handleQuickSearch = (medicine) => {\r\n    setQuery(medicine);\r\n    setSuggestions([]); // hide suggestions\r\n    setTimeout(() => handleSearch(), 0);\r\n  };\r\n\r\n  // ‚úÖ Filter quick options while typing\r\n  useEffect(() => {\r\n    if (!query.trim()) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n    const filtered = quickOptions.filter((opt) =>\r\n      opt.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    setSuggestions(filtered);\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"medicine-search-container\">\r\n      <h2>üîç Search Medicine Availability</h2>\r\n\r\n      <form onSubmit={handleSearch} className=\"search-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          placeholder=\"Enter medicine name (e.g., Paracetamol)\"\r\n          className=\"search-input\"\r\n        />\r\n        <button type=\"submit\" className=\"search-btn\">\r\n          Search\r\n        </button>\r\n      </form>\r\n\r\n      {/* ‚úÖ Suggestions dropdown while typing */}\r\n      {suggestions.length > 0 && (\r\n        <ul className=\"suggestions-list\">\r\n          {suggestions.map((med) => (\r\n            <li key={med} onClick={() => handleQuickSearch(med)}>\r\n              {med}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {loading && <p>Searching...</p>}\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      <div className=\"pharmacist-results\">\r\n        {results.length > 0 ? (\r\n          results.map((pharmacist) => (\r\n            <PharmacistCard\r\n              key={pharmacist.userId}\r\n              pharmacist={pharmacist}\r\n              highlight={query}\r\n            />\r\n          ))\r\n        ) : (\r\n          !loading &&\r\n          query && <p>No pharmacists found stocking \"{query}\".</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}