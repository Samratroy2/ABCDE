{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMRAT ROY\\\\Downloads\\\\new 1\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [loading, setLoading] = useState(false);\n\n  // ================= LOGIN =================\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\n        email,\n        password\n      });\n      localStorage.setItem(\"token\", res.data.token);\n      setUser(res.data.user);\n      setToken(res.data.token);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error(\"Login error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Login failed\"\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ================= SIGNUP =================\n  const signup = async (name, email, password) => {\n    try {\n      setLoading(true);\n      await axios.post(\"http://localhost:5000/api/auth/signup\", {\n        name,\n        email,\n        password\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response4$data;\n      console.error(\"Signup error:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      return {\n        success: false,\n        message: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Signup failed\"\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ================= LOGOUT =================\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    setToken(null);\n    window.location.href = \"/login\"; // redirect to login page\n  };\n\n  // ================= FORGOT PASSWORD =================\n  const sendForgotPassword = async email => {\n    try {\n      setLoading(true);\n      const res = await axios.post(\"http://localhost:5000/api/auth/forgot-password\", {\n        email\n      });\n      return {\n        success: true,\n        message: res.data.message\n      };\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response6$data;\n      console.error(\"Forgot password error:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      return {\n        success: false,\n        message: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || \"Failed to send OTP\"\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ================= RESET PASSWORD =================\n  const resetPassword = async (email, otp, newPassword) => {\n    try {\n      setLoading(true);\n      const res = await axios.post(\"http://localhost:5000/api/auth/reset-password\", {\n        email,\n        otp,\n        newPassword\n      });\n      return {\n        success: true,\n        message: res.data.message\n      };\n    } catch (error) {\n      var _error$response7, _error$response8, _error$response8$data;\n      console.error(\"Reset password error:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      return {\n        success: false,\n        message: ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || \"Reset password failed\"\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ================= CONTEXT VALUE =================\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    signup,\n    logout,\n    sendForgotPassword,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"8caCLvF1B8snE06+kMNqz9yBO80=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","login","email","password","res","post","setItem","data","success","error","_error$response","_error$response2","_error$response2$data","console","response","message","signup","name","_error$response3","_error$response4","_error$response4$data","logout","removeItem","window","location","href","sendForgotPassword","_error$response5","_error$response6","_error$response6$data","resetPassword","otp","newPassword","_error$response7","_error$response8","_error$response8$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = createContext();\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // ================= LOGIN =================\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      setUser(res.data.user);\r\n      setToken(res.data.token);\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error.response?.data || error.message);\r\n      return { success: false, message: error.response?.data?.message || \"Login failed\" };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ================= SIGNUP =================\r\n  const signup = async (name, email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      await axios.post(\"http://localhost:5000/api/auth/signup\", {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error(\"Signup error:\", error.response?.data || error.message);\r\n      return { success: false, message: error.response?.data?.message || \"Signup failed\" };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ================= LOGOUT =================\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n    setToken(null);\r\n    window.location.href = \"/login\"; // redirect to login page\r\n  };\r\n\r\n  // ================= FORGOT PASSWORD =================\r\n  const sendForgotPassword = async (email) => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/forgot-password\", {\r\n        email,\r\n      });\r\n      return { success: true, message: res.data.message };\r\n    } catch (error) {\r\n      console.error(\"Forgot password error:\", error.response?.data || error.message);\r\n      return { success: false, message: error.response?.data?.message || \"Failed to send OTP\" };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ================= RESET PASSWORD =================\r\n  const resetPassword = async (email, otp, newPassword) => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/reset-password\", {\r\n        email,\r\n        otp,\r\n        newPassword,\r\n      });\r\n      return { success: true, message: res.data.message };\r\n    } catch (error) {\r\n      console.error(\"Reset password error:\", error.response?.data || error.message);\r\n      return { success: false, message: error.response?.data?.message || \"Reset password failed\" };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ================= CONTEXT VALUE =================\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    signup,\r\n    logout,\r\n    sendForgotPassword,\r\n    resetPassword,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}