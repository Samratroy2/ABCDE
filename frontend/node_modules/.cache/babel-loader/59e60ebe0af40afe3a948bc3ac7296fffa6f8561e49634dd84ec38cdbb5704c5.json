{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMRAT ROY\\\\Downloads\\\\new 1\\\\frontend\\\\src\\\\pages\\\\Patients.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './PatientsDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Patients() {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/patients');\n        if (Array.isArray(res.data)) {\n          setPatients(res.data);\n        } else {\n          setPatients([]);\n          setError('Invalid response from server');\n        }\n      } catch (err) {\n        console.error('Error fetching patients:', err);\n        setError('Failed to load patients');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading patients...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  if (!patients.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No patients found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patients-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patients-grid\",\n      children: patients.map((patient, index) => {\n        // Full URL for backend images\n        const imageUrl = patient.image ? `http://localhost:5000${encodeURI(patient.image)}` : '/default-patient.png';\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/patients/${patient.userId}`,\n          className: \"patient-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: patient.name || 'Patient',\n            className: \"patient-card-photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: patient.name || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Age:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 18\n            }, this), \" \", patient.age || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 18\n            }, this), \" \", patient.location || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, patient.userId || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Patients, \"49M53i5/t2D7EfN+O5aVSzGTy2g=\");\n_c = Patients;\nvar _c;\n$RefreshReg$(_c, \"Patients\");","map":{"version":3,"names":["useEffect","useState","Link","axios","jsxDEV","_jsxDEV","Patients","_s","patients","setPatients","loading","setLoading","error","setError","fetchPatients","res","get","Array","isArray","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","className","map","patient","index","imageUrl","image","encodeURI","to","userId","src","alt","name","age","location","_c","$RefreshReg$"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/pages/Patients.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './PatientsDetails.css';\r\n\r\nexport default function Patients() {\r\n  const [patients, setPatients] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchPatients = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/patients');\r\n        if (Array.isArray(res.data)) {\r\n          setPatients(res.data);\r\n        } else {\r\n          setPatients([]);\r\n          setError('Invalid response from server');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching patients:', err);\r\n        setError('Failed to load patients');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading patients...</p>;\r\n  if (error) return <p style={{ color: 'red' }}>{error}</p>;\r\n  if (!patients.length) return <p>No patients found.</p>;\r\n\r\n  return (\r\n    <div className=\"patients-page\">\r\n      <h1>All Patients</h1>\r\n      <div className=\"patients-grid\">\r\n        {patients.map((patient, index) => {\r\n          // Full URL for backend images\r\n          const imageUrl = patient.image\r\n            ? `http://localhost:5000${encodeURI(patient.image)}`\r\n            : '/default-patient.png';\r\n\r\n          return (\r\n            <Link\r\n              to={`/patients/${patient.userId}`}\r\n              key={patient.userId || index}\r\n              className=\"patient-card\"\r\n            >\r\n              <img\r\n                src={imageUrl}\r\n                alt={patient.name || 'Patient'}\r\n                className=\"patient-card-photo\"\r\n              />\r\n              <h3>{patient.name || 'N/A'}</h3>\r\n              <p><strong>Age:</strong> {patient.age || 'N/A'}</p>\r\n              <p><strong>Location:</strong> {patient.location || 'N/A'}</p>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}