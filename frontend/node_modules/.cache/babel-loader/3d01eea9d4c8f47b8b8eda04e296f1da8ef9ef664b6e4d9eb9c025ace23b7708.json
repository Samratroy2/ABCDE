{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMRAT ROY\\\\Downloads\\\\new 1\\\\frontend\\\\src\\\\pages\\\\BookAppointment.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookAppointment() {\n  _s();\n  const {\n    doctorId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [doctor, setDoctor] = useState(null);\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchDoctor = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/api/doctors/${doctorId}`);\n        setDoctor(res.data);\n      } catch (err) {\n        setError('Failed to load doctor');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDoctor();\n  }, [doctorId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!date || !time) return alert('Please select date and time');\n    try {\n      await axios.post('http://localhost:5000/api/appointments', {\n        doctorId: doctor.userId,\n        doctorName: doctor.name,\n        doctorEmail: doctor.email,\n        patientId: user.userId,\n        patientName: user.name,\n        patientEmail: user.email,\n        date,\n        time\n      }, {\n        headers: {\n          Authorization: `Bearer ${user.token}` // make sure token exists\n        }\n      });\n      alert('Appointment request sent!');\n      navigate('/my-appointments');\n    } catch (err) {\n      console.error(err);\n      alert('Failed to send appointment request');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading doctor...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 21\n  }, this);\n  if (!doctor) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Doctor not found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Book Appointment with \", doctor.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: time,\n          onChange: e => setTime(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(BookAppointment, \"yYCdd19n/SVRimBoY7NGx/Xg2Lg=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = BookAppointment;\nvar _c;\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["useState","useEffect","useParams","useNavigate","axios","useAuth","jsxDEV","_jsxDEV","BookAppointment","_s","doctorId","user","navigate","doctor","setDoctor","date","setDate","time","setTime","loading","setLoading","error","setError","fetchDoctor","res","get","data","err","handleSubmit","e","preventDefault","alert","post","userId","doctorName","name","doctorEmail","email","patientId","patientName","patientEmail","headers","Authorization","token","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/pages/BookAppointment.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport default function BookAppointment() {\r\n  const { doctorId } = useParams();\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const [doctor, setDoctor] = useState(null);\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchDoctor = async () => {\r\n      try {\r\n        const res = await axios.get(`http://localhost:5000/api/doctors/${doctorId}`);\r\n        setDoctor(res.data);\r\n      } catch (err) {\r\n        setError('Failed to load doctor');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchDoctor();\r\n  }, [doctorId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!date || !time) return alert('Please select date and time');\r\n\r\n    try {\r\n      await axios.post(\r\n        'http://localhost:5000/api/appointments',\r\n        {\r\n          doctorId: doctor.userId,\r\n          doctorName: doctor.name,\r\n          doctorEmail: doctor.email,\r\n          patientId: user.userId,\r\n          patientName: user.name,\r\n          patientEmail: user.email,\r\n          date,\r\n          time,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`, // make sure token exists\r\n          },\r\n        }\r\n      );\r\n      alert('Appointment request sent!');\r\n      navigate('/my-appointments');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Failed to send appointment request');\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading doctor...</p>;\r\n  if (error) return <p style={{ color: 'red' }}>{error}</p>;\r\n  if (!doctor) return <p>Doctor not found.</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Book Appointment with {doctor.name}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Date:\r\n          <input type=\"date\" value={date} onChange={e => setDate(e.target.value)} required />\r\n        </label>\r\n        <label>\r\n          Time:\r\n          <input type=\"time\" value={time} onChange={e => setTime(e.target.value)} required />\r\n        </label>\r\n        <button type=\"submit\">Send Request</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAS,CAAC,GAAGR,SAAS,CAAC,CAAC;EAChC,MAAM;IAAES;EAAK,CAAC,GAAGN,OAAO,CAAC,CAAC;EAC1B,MAAMO,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMsB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,qCAAqCf,QAAQ,EAAE,CAAC;QAC5EI,SAAS,CAACU,GAAG,CAACE,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZL,QAAQ,CAAC,uBAAuB,CAAC;MACnC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDG,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;EAEd,MAAMkB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACf,IAAI,IAAI,CAACE,IAAI,EAAE,OAAOc,KAAK,CAAC,6BAA6B,CAAC;IAE/D,IAAI;MACF,MAAM3B,KAAK,CAAC4B,IAAI,CACd,wCAAwC,EACxC;QACEtB,QAAQ,EAAEG,MAAM,CAACoB,MAAM;QACvBC,UAAU,EAAErB,MAAM,CAACsB,IAAI;QACvBC,WAAW,EAAEvB,MAAM,CAACwB,KAAK;QACzBC,SAAS,EAAE3B,IAAI,CAACsB,MAAM;QACtBM,WAAW,EAAE5B,IAAI,CAACwB,IAAI;QACtBK,YAAY,EAAE7B,IAAI,CAAC0B,KAAK;QACxBtB,IAAI;QACJE;MACF,CAAC,EACD;QACEwB,OAAO,EAAE;UACPC,aAAa,EAAE,UAAU/B,IAAI,CAACgC,KAAK,EAAE,CAAE;QACzC;MACF,CACF,CAAC;MACDZ,KAAK,CAAC,2BAA2B,CAAC;MAClCnB,QAAQ,CAAC,kBAAkB,CAAC;IAC9B,CAAC,CAAC,OAAOe,GAAG,EAAE;MACZiB,OAAO,CAACvB,KAAK,CAACM,GAAG,CAAC;MAClBI,KAAK,CAAC,oCAAoC,CAAC;IAC7C;EACF,CAAC;EAED,IAAIZ,OAAO,EAAE,oBAAOZ,OAAA;IAAAsC,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC5C,IAAI5B,KAAK,EAAE,oBAAOd,OAAA;IAAG2C,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAN,QAAA,EAAExB;EAAK;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EACzD,IAAI,CAACpC,MAAM,EAAE,oBAAON,OAAA;IAAAsC,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE5C,oBACE1C,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAAsC,QAAA,GAAI,wBAAsB,EAAChC,MAAM,CAACsB,IAAI;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5C1C,OAAA;MAAM6C,QAAQ,EAAExB,YAAa;MAAAiB,QAAA,gBAC3BtC,OAAA;QAAAsC,QAAA,GAAO,OAEL,eAAAtC,OAAA;UAAO8C,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEvC,IAAK;UAACwC,QAAQ,EAAE1B,CAAC,IAAIb,OAAO,CAACa,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC,eACR1C,OAAA;QAAAsC,QAAA,GAAO,OAEL,eAAAtC,OAAA;UAAO8C,IAAI,EAAC,MAAM;UAACC,KAAK,EAAErC,IAAK;UAACsC,QAAQ,EAAE1B,CAAC,IAAIX,OAAO,CAACW,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC,eACR1C,OAAA;QAAQ8C,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACxC,EAAA,CA5EuBD,eAAe;EAAA,QAChBN,SAAS,EACbG,OAAO,EACPF,WAAW;AAAA;AAAAuD,EAAA,GAHNlD,eAAe;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}