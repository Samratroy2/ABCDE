{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMRAT ROY\\\\Downloads\\\\new 1\\\\frontend\\\\src\\\\pages\\\\MedicineSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport PharmacistCard from \"../components/PharmacistCard\";\nimport \"./MedicineSearch.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MedicineSearch() {\n  _s();\n  const [queryParams] = useSearchParams();\n  const [query, setQuery] = useState(queryParams.get(\"name\") || \"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n\n  // Quick search options (can be fetched from backend later)\n  const quickOptions = [\"Paracetamol\", \"Ibuprofen\", \"Amoxicillin\", \"Cetirizine\", \"Azithromycin\", \"Metformin\", \"Atorvastatin\", \"Amlodipine\", \"Omeprazole\", \"Diclofenac\"];\n\n  // Function to call backend search\n  const handleSearch = async e => {\n    if (e) e.preventDefault();\n    if (!query.trim()) {\n      setError(\"Please enter a medicine name.\");\n      return;\n    }\n    setError(\"\");\n    setLoading(true);\n    setSuggestions([]); // hide suggestions on submit\n\n    try {\n      const res = await axios.get(`http://localhost:5000/api/pharmacists/search/medicine?name=${encodeURIComponent(query)}`);\n      setResults(res.data);\n    } catch (err) {\n      console.error(\"Error searching medicine:\", err);\n      setError(\"Failed to fetch results.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Auto-search if query param exists\n  useEffect(() => {\n    if (query) handleSearch();\n    // eslint-disable-next-line\n  }, [query]);\n\n  // Update suggestions as user types\n  useEffect(() => {\n    if (!query.trim()) {\n      setSuggestions([]);\n      return;\n    }\n    const filtered = quickOptions.filter(med => med.toLowerCase().includes(query.toLowerCase()));\n    setSuggestions(filtered);\n  }, [query]);\n\n  // Handle suggestion click\n  const handleQuickSearch = medicine => {\n    setQuery(medicine);\n    setSuggestions([]);\n    setTimeout(() => handleSearch(), 0); // trigger search after setting query\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"medicine-search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD0D Search Medicine Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        className: \"search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Enter medicine name (e.g., Paracetamol)\",\n          className: \"search-input\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"search-btn\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestions-list\",\n        children: suggestions.map(med => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleQuickSearch(med),\n          children: med\n        }, med, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Searching...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pharmacist-results\",\n      children: results.length > 0 ? results.map(pharmacist => /*#__PURE__*/_jsxDEV(PharmacistCard, {\n        pharmacist: pharmacist,\n        highlight: query\n      }, pharmacist.userId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)) : !loading && query && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No pharmacists found stocking \\\"\", query, \"\\\".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(MedicineSearch, \"DwGtJH5R8AHNfT5KjR+CzQ2Cvmg=\", false, function () {\n  return [useSearchParams];\n});\n_c = MedicineSearch;\nvar _c;\n$RefreshReg$(_c, \"MedicineSearch\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","axios","PharmacistCard","jsxDEV","_jsxDEV","MedicineSearch","_s","queryParams","query","setQuery","get","results","setResults","loading","setLoading","error","setError","suggestions","setSuggestions","quickOptions","handleSearch","e","preventDefault","trim","res","encodeURIComponent","data","err","console","filtered","filter","med","toLowerCase","includes","handleQuickSearch","medicine","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","autoComplete","length","map","onClick","pharmacist","highlight","userId","_c","$RefreshReg$"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/pages/MedicineSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport PharmacistCard from \"../components/PharmacistCard\";\r\nimport \"./MedicineSearch.css\";\r\n\r\nexport default function MedicineSearch() {\r\n  const [queryParams] = useSearchParams();\r\n  const [query, setQuery] = useState(queryParams.get(\"name\") || \"\");\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  // Quick search options (can be fetched from backend later)\r\n  const quickOptions = [\r\n    \"Paracetamol\",\r\n    \"Ibuprofen\",\r\n    \"Amoxicillin\",\r\n    \"Cetirizine\",\r\n    \"Azithromycin\",\r\n    \"Metformin\",\r\n    \"Atorvastatin\",\r\n    \"Amlodipine\",\r\n    \"Omeprazole\",\r\n    \"Diclofenac\",\r\n  ];\r\n\r\n  // Function to call backend search\r\n  const handleSearch = async (e) => {\r\n    if (e) e.preventDefault();\r\n    if (!query.trim()) {\r\n      setError(\"Please enter a medicine name.\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n    setSuggestions([]); // hide suggestions on submit\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `http://localhost:5000/api/pharmacists/search/medicine?name=${encodeURIComponent(query)}`\r\n      );\r\n      setResults(res.data);\r\n    } catch (err) {\r\n      console.error(\"Error searching medicine:\", err);\r\n      setError(\"Failed to fetch results.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Auto-search if query param exists\r\n  useEffect(() => {\r\n    if (query) handleSearch();\r\n    // eslint-disable-next-line\r\n  }, [query]);\r\n\r\n  // Update suggestions as user types\r\n  useEffect(() => {\r\n    if (!query.trim()) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n    const filtered = quickOptions.filter((med) =>\r\n      med.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    setSuggestions(filtered);\r\n  }, [query]);\r\n\r\n  // Handle suggestion click\r\n  const handleQuickSearch = (medicine) => {\r\n    setQuery(medicine);\r\n    setSuggestions([]);\r\n    setTimeout(() => handleSearch(), 0); // trigger search after setting query\r\n  };\r\n\r\n  return (\r\n    <div className=\"medicine-search-container\">\r\n      <h2>🔍 Search Medicine Availability</h2>\r\n\r\n      <div className=\"search-box-wrapper\">\r\n        <form onSubmit={handleSearch} className=\"search-form\">\r\n          <input\r\n            type=\"text\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            placeholder=\"Enter medicine name (e.g., Paracetamol)\"\r\n            className=\"search-input\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <button type=\"submit\" className=\"search-btn\">\r\n            Search\r\n          </button>\r\n        </form>\r\n\r\n        {/* Suggestions dropdown */}\r\n        {suggestions.length > 0 && (\r\n          <ul className=\"suggestions-list\">\r\n            {suggestions.map((med) => (\r\n              <li key={med} onClick={() => handleQuickSearch(med)}>\r\n                {med}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      {loading && <p>Searching...</p>}\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      <div className=\"pharmacist-results\">\r\n        {results.length > 0 ? (\r\n          results.map((pharmacist) => (\r\n            <PharmacistCard\r\n              key={pharmacist.userId}\r\n              pharmacist={pharmacist}\r\n              highlight={query}\r\n            />\r\n          ))\r\n        ) : (\r\n          !loading && query && <p>No pharmacists found stocking \"{query}\".</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}