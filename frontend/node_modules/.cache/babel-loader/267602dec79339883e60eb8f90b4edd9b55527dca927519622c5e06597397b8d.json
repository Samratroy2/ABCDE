{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMRAT ROY\\\\Downloads\\\\new 1\\\\frontend\\\\src\\\\pages\\\\BookAppointment.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/BookAppointment.jsx\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport \"./BookAppointment.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookAppointment() {\n  _s();\n  const {\n    doctorId\n  } = useParams(); // doctorId from route\n  const {\n    user,\n    token\n  } = useAuth(); // logged-in patient\n  const navigate = useNavigate();\n  const [doctor, setDoctor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n\n  // Fetch doctor details from dummy JSON\n  useEffect(() => {\n    const fetchDoctor = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/data/dummyDoctorData.json\");\n        const foundDoctor = res.data.find(d => d.userId === doctorId);\n        if (!foundDoctor) throw new Error(\"Doctor not found\");\n        setDoctor(foundDoctor);\n      } catch (err) {\n        console.error(err);\n        setError(\"Failed to load doctor details.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (doctorId) fetchDoctor();\n  }, [doctorId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!date || !time) {\n      alert(\"Please select date and time.\");\n      return;\n    }\n    if (!user || !doctor) {\n      alert(\"Patient or doctor information missing.\");\n      return;\n    }\n    setSubmitting(true);\n    const appointmentData = {\n      patientId: user.userId,\n      patientName: user.name,\n      patientEmail: user.email,\n      doctorId: doctor.userId,\n      doctorName: doctor.name,\n      doctorEmail: doctor.email,\n      date,\n      time\n    };\n    try {\n      await axios.post(\"http://localhost:5000/api/appointments\", appointmentData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"Appointment request sent successfully!\");\n      navigate(\"/my-appointments\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to book appointment.\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading doctor details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 21\n  }, this);\n  if (!doctor) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Doctor not found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-appointment-page\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/doctors/${doctor.userId}`,\n      children: \"\\u2190 Back to Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Book Appointment with \", doctor.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"appointment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Patient Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: user.name,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Patient Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: user.email,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: time,\n          onChange: e => setTime(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: submitting,\n        children: submitting ? \"Booking...\" : \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(BookAppointment, \"kJCa8AubNklDXdD0j7UguNnjHaA=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = BookAppointment;\nvar _c;\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["useState","useEffect","useParams","useNavigate","Link","axios","useAuth","jsxDEV","_jsxDEV","BookAppointment","_s","doctorId","user","token","navigate","doctor","setDoctor","loading","setLoading","error","setError","date","setDate","time","setTime","submitting","setSubmitting","fetchDoctor","res","get","foundDoctor","data","find","d","userId","Error","err","console","handleSubmit","e","preventDefault","alert","appointmentData","patientId","patientName","name","patientEmail","email","doctorName","doctorEmail","post","headers","Authorization","_err$response","_err$response$data","response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","className","to","onSubmit","type","value","readOnly","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/SAMRAT ROY/Downloads/new 1/frontend/src/pages/BookAppointment.jsx"],"sourcesContent":["// frontend/src/pages/BookAppointment.jsx\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport \"./BookAppointment.css\";\r\n\r\nexport default function BookAppointment() {\r\n  const { doctorId } = useParams(); // doctorId from route\r\n  const { user, token } = useAuth(); // logged-in patient\r\n  const navigate = useNavigate();\r\n\r\n  const [doctor, setDoctor] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  // Fetch doctor details from dummy JSON\r\n  useEffect(() => {\r\n    const fetchDoctor = async () => {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:5000/data/dummyDoctorData.json\");\r\n        const foundDoctor = res.data.find((d) => d.userId === doctorId);\r\n        if (!foundDoctor) throw new Error(\"Doctor not found\");\r\n        setDoctor(foundDoctor);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError(\"Failed to load doctor details.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (doctorId) fetchDoctor();\r\n  }, [doctorId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!date || !time) {\r\n      alert(\"Please select date and time.\");\r\n      return;\r\n    }\r\n\r\n    if (!user || !doctor) {\r\n      alert(\"Patient or doctor information missing.\");\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n\r\n    const appointmentData = {\r\n      patientId: user.userId,\r\n      patientName: user.name,\r\n      patientEmail: user.email,\r\n      doctorId: doctor.userId,\r\n      doctorName: doctor.name,\r\n      doctorEmail: doctor.email,\r\n      date,\r\n      time,\r\n    };\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/api/appointments\", appointmentData, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      alert(\"Appointment request sent successfully!\");\r\n      navigate(\"/my-appointments\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(err.response?.data?.message || \"Failed to book appointment.\");\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading doctor details...</p>;\r\n  if (error) return <p style={{ color: \"red\" }}>{error}</p>;\r\n  if (!doctor) return <p>Doctor not found.</p>;\r\n\r\n  return (\r\n    <div className=\"book-appointment-page\">\r\n      <Link to={`/doctors/${doctor.userId}`}>← Back to Doctor</Link>\r\n      <h1>Book Appointment with {doctor.name}</h1>\r\n\r\n      <form onSubmit={handleSubmit} className=\"appointment-form\">\r\n        <div>\r\n          <label>Patient Name:</label>\r\n          <input type=\"text\" value={user.name} readOnly />\r\n        </div>\r\n        <div>\r\n          <label>Patient Email:</label>\r\n          <input type=\"email\" value={user.email} readOnly />\r\n        </div>\r\n        <div>\r\n          <label>Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Time:</label>\r\n          <input\r\n            type=\"time\"\r\n            value={time}\r\n            onChange={(e) => setTime(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={submitting}>\r\n          {submitting ? \"Booking...\" : \"Book Appointment\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}